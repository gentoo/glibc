.\" -*- nroff -*-
.\" Copyright (C) 2002, 2005 Free Software Foundation, Inc.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2, or (at your option)
.\" any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software Foundation,
.\" Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
.TH locale.gen 5 "July 2005" "Debian GNU/Linux"
.SH "NAME"
locale.gen \- Configuration file for locale-gen
.SH "DESCRIPTION"
The file \fB/etc/locale.gen\fP lists the locales that are to be generated
by the \fBlocale-gen\fP command.

Each line is of the form:

<locale name> <charset>

Where <locale name> starts with a name as found in
.BR /usr/share/i18n/locales/ .
It must be unique in the file as it is used as the key to locale variables
(e.g. when you do `export LANG="<locale name>"`).  For default encodings,
the <charset> is typically omitted, else it is appended with a "." separator.

Where <charset> is one of the character sets listed in
.B /usr/share/i18n/charmaps
(sans any suffix like ".gz").  It should use the same naming conventions too --
all caps, and dashes/underscores included.  e.g. Use "UTF-8", not "utf8".

The
.B locale-gen
command will generate all the locales, placing them in
\fB/usr/lib/locale\fP.

Comments start with the hash mark # and may only be on new lines.
.SH "OPTIONS"
Options start with #% (to preserve backwards compatibility).

# This enables the "foo" option.
.br
#%foo
.TP
.B no-locale-archive
Disable generation of the locale archive file and instead generate multiple
files/directories for each locale.  This slows down runtime greatly (by having
multiple files spread out in the filesystem instead of a single binary file),
but it does mean build time is much faster (as you can generate in parallel).

You should not use this option.
.SH "EXAMPLES"
.nf
# Create a "en_US" locale using ISO-8859-1 encoding.
# When you set LANG=en_US or LANG=en_US.ISO-8859-1, this is used.
.B en_US ISO-8859-1

# Create a "en_US" locale using UTF-8 encoding.
# When you set LANG=en_US.UTF-8, this is used.
.B en_US.UTF-8 UTF-8
.fi
.SH "SEE ALSO"
.BR locale (1),
.BR localedef (1),
.BR locale-gen (8)
.SH "AUTHORS"
.nf
Alastair McKinstry <mckinstry@computer.org>
Mike Frysinger <vapier@gentoo.org>
.fi
